<?php if ( ! defined( 'DEVIL_SYS_CORE_PATH' ) ) exit( 'No direct script access allowed' );
/**
  @brief        檔案、目錄操作相關類別
  @version      1.0.0
  @date         2015-03-31 by Vam
  @since        1.0.0 -> 新增此新類別。
**/

class Files
{
    /**
    @cond       建構子
    **/
    public function __construct(  )
    {
        //
    }
    /**
    @endcond
    **/

    /**
    @brief      建立資料夾
    @param      string      $aimUrl 可使用絕對路徑，若使用 'b/c/a' 則以當前所在路徑下建立
    @retval     boolean     若成功，則返回 true，否則返回 false。
    @remarks    此範例結果：建立 b目錄/c目錄/a目錄。
    @code{.unparsed}
    $this->Core_Files->createDir( 'b/c/a' );
    @endcode
    **/
    public function createDir( $aimUrl = null )
    {
        # ----------------------------------------------------------------------
        # 初始化變數
        # ----------------------------------------------------------------------
        $aimDir = ''; $result = true;
        # ----------------------------------------------------------------------
        # 將指定的路徑位置【\】、【 /】取消
        # ----------------------------------------------------------------------
        $aimUrl = str_replace( '' , DIRECTORY_SEPARATOR , $aimUrl );
        # ----------------------------------------------------------------------
        # 再利用 DIRECTORY_SEPARATOR( 文件分隔符 )，切割為陣列
        # ----------------------------------------------------------------------
        $arr = explode( DIRECTORY_SEPARATOR , $aimUrl );
        # ----------------------------------------------------------------------
        # 遞回產生目錄
        # ----------------------------------------------------------------------
        foreach ( $arr as $str )
        {
            # ------------------------------------------------------------------
            # 針對當前路徑，例如第一圈為 'a/'，第二圈為 'a/b' 因為 b 是在 a 目錄下
            # ------------------------------------------------------------------
            $aimDir .= $str . DIRECTORY_SEPARATOR;
            # ------------------------------------------------------------------
            # 如果資料夾不存在，就產生
            # ------------------------------------------------------------------
            if ( ! file_exists( $aimDir ) )
            {
                $result = mkdir( $aimDir );
            }
        }

        return $result;
    }

    /**
    @brief      建立檔案
    @param      string      $aimUrl
    @param      boolean     $overWrite 該參數控制是否覆蓋原文件
    @retval     boolean
    @remarks    此範例結果：建立 b目錄/c目錄/a目錄。
    @code{.unparsed}
    $this->Core_Files->createFile( 'b/c/a' );
    @endcode
    **/
    public function createFile( $aimUrl = null , $overWrite = false )
    {
        # ----------------------------------------------------------------------
        # 如果檔案已存在，且$overWrite不覆蓋原檔案
        # ----------------------------------------------------------------------
        if ( file_exists( $aimUrl ) && $overWrite == false )
        {
            return false;
        }
        # ----------------------------------------------------------------------
        # 如果檔案已存在，且要覆蓋原檔案
        # ----------------------------------------------------------------------
        else if ( file_exists( $aimUrl ) && $overWrite == true )
        {
            # ------------------------------------------------------------------
            # 刪除原本檔案
            # ------------------------------------------------------------------
            $this->unlinkFile( $aimUrl );
        }
        # ----------------------------------------------------------------------
        # 取得目錄路徑
        # ----------------------------------------------------------------------
        $aimDir = dirname( $aimUrl );
        # ----------------------------------------------------------------------
        # 開始產生檔案
        # ----------------------------------------------------------------------
        $this->createDir( $aimDir );
        # ----------------------------------------------------------------------
        # 如果檔案不存在，則自動建立
        # ----------------------------------------------------------------------
        touch( $aimUrl );

        return true;
    }

    /**
    @brief      移動資料夾
    @param      string      $oldDir
    @param      string      $aimDir
    @param      boolean     $overWrite 該參數控制是否覆蓋原文件
    @retval     boolean
    @remarks    此範例結果：此範例結果：將目錄 a/ 移動至目錄 b/c/ 下。
    @code{.unparsed}
    $this->Core_Files->moveDir( 'a/' , 'b/c' );
    @endcode
    **/
    public function moveDir( $oldDir = null , $aimDir = null , $overWrite = false )
    {
        # ----------------------------------------------------------------------
        # 將指定的路徑位置【\】、【 /】取消
        # ----------------------------------------------------------------------
        $aimDir = str_replace( '' , DIRECTORY_SEPARATOR , $aimDir );
        # ----------------------------------------------------------------------
        # 如果路徑位置最後一個字串為 DIRECTORY_SEPARATOR( 文件分隔符 )，就用傳入的。
        # 若不是DIRECTORY_SEPARATOR( 文件分隔符 )，則黏上
        # ----------------------------------------------------------------------
        $aimDir = substr( $aimDir , -1 ) == ( DIRECTORY_SEPARATOR ) ? $aimDir : $aimDir . DIRECTORY_SEPARATOR;
        # ----------------------------------------------------------------------
        # 將字串中所有分隔符號替換掉
        # ----------------------------------------------------------------------
        $oldDir = str_replace( '' , DIRECTORY_SEPARATOR , $oldDir);
        # ----------------------------------------------------------------------
        # 如果路徑位置最後一個字串為 DIRECTORY_SEPARATOR( 文件分隔符 )，就用傳入的。
        # 若不是DIRECTORY_SEPARATOR( 文件分隔符 )，則黏上
        # ----------------------------------------------------------------------
        $oldDir = substr( $oldDir , -1 ) == ( DIRECTORY_SEPARATOR ) ? $oldDir : $oldDir . DIRECTORY_SEPARATOR;
        # ----------------------------------------------------------------------
        # 如果不是資料夾就不處理
        # ----------------------------------------------------------------------
        if ( ! is_dir( $oldDir ) )
        {
            return false;
        }
        # ----------------------------------------------------------------------
        # 如果資料夾不存在，就建立資料夾
        # ----------------------------------------------------------------------
        if ( ! file_exists( $aimDir ) )
        {
            $this->createDir( $aimDir );
        }
        # ----------------------------------------------------------------------
        # 建立後嘗試開啟目錄，檢查是否建立正確
        # ----------------------------------------------------------------------
        $dirHandle = @opendir( $oldDir );
        if ( ! $dirHandle )
        {
            return false;
        }
        # ----------------------------------------------------------------------
        # 開始列出檔案中的文件名稱
        # ----------------------------------------------------------------------
        while ( false !== ( $file = readdir( $dirHandle ) ) )
        {
            if ( $file == '.' || $file == '..' )
            {
                continue;
            }
            # ------------------------------------------------------------------
            # 如果是檔案就移動
            # ------------------------------------------------------------------
            if ( ! is_dir( $oldDir . $file ) )
            {
                $this->moveFile( $oldDir . $file , $aimDir . $file , $overWrite );
            }
            # ------------------------------------------------------------------
            # 如果是資料夾就移動
            # ------------------------------------------------------------------
            else
            {
                $this->moveDir( $oldDir . $file , $aimDir . $file , $overWrite );
            }
        }
        # ----------------------------------------------------------------------
        # 關閉讀取資料夾
        # ----------------------------------------------------------------------
        closedir( $dirHandle );
        # ----------------------------------------------------------------------
        # 回傳建立後結果
        # ----------------------------------------------------------------------
        return rmdir( $oldDir );
    }

    /**
    @brief      移動檔案
    @param      string      $fileUrl
    @param      string      $aimUrl
    @param      boolean     $overWrite 該參數控制是否覆蓋原文件
    @retval     boolean
    @remarks    此範例結果：將目錄 b/1/2/ 下的 3.exe 檔案移動至目錄 b/d/ 下。
    @code{.unparsed}
    $this->Core_Files->moveFile( 'b/1/2/3.exe' , 'b/d/3.exe' );
    @endcode
    **/
    public function moveFile( $fileUrl = null , $aimUrl = null , $overWrite = false )
    {
        # ----------------------------------------------------------------------
        # 如果來源檔案不存在則不處理
        # ----------------------------------------------------------------------
        if ( ! file_exists( $fileUrl ) )
        {
            return false;
        }
        # ----------------------------------------------------------------------
        # 如果來源檔案存在 且 不覆蓋則不處理
        # ----------------------------------------------------------------------
        if ( file_exists( $aimUrl ) && $overWrite == false )
        {
            return false;
        }
        # ----------------------------------------------------------------------
        # 如果來源檔案存在 且 要覆蓋則先刪除舊檔案
        # ----------------------------------------------------------------------
        elseif ( file_exists( $aimUrl ) && $overWrite == true )
        {
            $this->unlinkFile( $aimUrl );
        }
        # ----------------------------------------------------------------------
        # 取得目錄路徑
        # ----------------------------------------------------------------------
        $aimDir = dirname( $aimUrl );
        # ----------------------------------------------------------------------
        # 開始產生檔案
        # ----------------------------------------------------------------------
        $this->createDir( $aimDir );
        # ----------------------------------------------------------------------
        # 開始移動檔案
        # ----------------------------------------------------------------------
        rename( $fileUrl , $aimUrl );

        return true;
    }

    /**
    @brief      刪除資料夾
    @param      string      $aimDir
    @retval     boolean
    @remarks    此範例結果：將目錄 b/ 下的 a 目錄刪除。
    @code{.unparsed}
    $this->Core_Files->unlinkDir( 'b/a' );
    @endcode
    **/
    public function unlinkDir( $aimDir = null )
    {
        # ----------------------------------------------------------------------
        # 將指定的路徑位置【\】、【 /】取消
        # ----------------------------------------------------------------------
        $aimDir = str_replace( '' , DIRECTORY_SEPARATOR , $aimDir );
        # ----------------------------------------------------------------------
        # 如果路徑位置最後一個字串為 DIRECTORY_SEPARATOR( 文件分隔符 )，就用傳入的。
        # 若不是DIRECTORY_SEPARATOR( 文件分隔符 )，則黏上
        # ----------------------------------------------------------------------
        $aimDir = substr( $aimDir , -1 ) == ( DIRECTORY_SEPARATOR ) ? $aimDir : $aimDir . DIRECTORY_SEPARATOR;
        # ----------------------------------------------------------------------
        # 如果不是資料夾，不處理
        # ----------------------------------------------------------------------
        if ( ! is_dir( $aimDir ) )
        {
            return false;
        }
        # ----------------------------------------------------------------------
        # 開啟目錄
        # ----------------------------------------------------------------------
        $dirHandle = @opendir( $aimDir );
        # ----------------------------------------------------------------------
        # 開始列出檔案中的文件名稱
        # ----------------------------------------------------------------------
        while ( false !== ( $file = readdir( $dirHandle ) ) )
        {
            if ( $file == '.' || $file == '..' )
            {
                continue;
            }
            # ------------------------------------------------------------------
            # 如果是檔案就使用 unlinkFile() 來刪除檔案
            # ------------------------------------------------------------------
            if ( ! is_dir( $aimDir . $file ) )
            {
                $this->unlinkFile( $aimDir . $file );
            }
            # ------------------------------------------------------------------
            # 如果是資料夾就使用 unlinkDir() 來刪除目錄
            # ------------------------------------------------------------------
            else
            {
                $this->unlinkDir( $aimDir . $file );
            }
        }
        # ----------------------------------------------------------------------
        # 關閉讀取目錄
        # ----------------------------------------------------------------------
        closedir( $dirHandle );
        # ----------------------------------------------------------------------
        # 回傳刪除目錄的執行結果
        # ----------------------------------------------------------------------
        return rmdir( $aimDir );
    }

    /**
    @brief      刪除檔案
    @param      string      $aimUrl
    @retval     boolean
    @remarks    此範例結果：將目錄 b/a 下的 3.exe 檔案刪除。
    @code{.unparsed}
    $this->Core_Files->unlinkFile( 'b/a/3.exe' );
    @endcode
    **/
    public function unlinkFile( $aimUrl = null )
    {
        # ----------------------------------------------------------------------
        # 如果檔案存在，就刪除檔案，並回傳true
        # ----------------------------------------------------------------------
        if ( file_exists( $aimUrl ) )
        {
            unlink( $aimUrl );
            return true;
        }
        else
        {
            return false;
        }
    }

    /**
    @brief      複製資料夾
    @param      string      $oldDir
    @param      string      $aimDir
    @param      boolean     $overWrite 該參數控制是否覆蓋原文件
    @retval     boolean
    @remarks    此範例結果：建立一個 d/e 資料夾，再把b資料夾下的內容複製進去。
    @code{.unparsed}
    $this->Core_Files->copyDir( 'b' , 'd/e' );
    @endcode
    **/
    public function copyDir( $oldDir = null , $aimDir = null , $overWrite = false )
    {
        # ----------------------------------------------------------------------
        # 將指定的路徑位置【\】、【 /】取消
        # ----------------------------------------------------------------------
        $aimDir = str_replace( '' , DIRECTORY_SEPARATOR , $aimDir );
        # ----------------------------------------------------------------------
        # 如果路徑位置最後一個字串為 DIRECTORY_SEPARATOR( 文件分隔符 )，就用傳入的。
        # 若不是DIRECTORY_SEPARATOR( 文件分隔符 )，則黏上
        # ----------------------------------------------------------------------
        $aimDir = substr( $aimDir , -1 ) == ( DIRECTORY_SEPARATOR ) ? $aimDir : $aimDir . DIRECTORY_SEPARATOR;
        # ----------------------------------------------------------------------
        # 將指定的路徑位置【\】、【 /】取消
        # ----------------------------------------------------------------------
        $oldDir = str_replace( '' , '/' , $oldDir );
        # ----------------------------------------------------------------------
        # 如果路徑位置最後一個字串為 DIRECTORY_SEPARATOR( 文件分隔符 )，就用傳入的。
        # 若不是DIRECTORY_SEPARATOR( 文件分隔符 )，則黏上
        # ----------------------------------------------------------------------
        $oldDir = substr( $oldDir , -1 ) == ( DIRECTORY_SEPARATOR ) ? $oldDir : $oldDir . DIRECTORY_SEPARATOR;
        # ----------------------------------------------------------------------
        # 如果不是資料夾，就不處理
        # ----------------------------------------------------------------------
        if ( ! is_dir( $oldDir ) )
        {
            return false;
        }
        # ----------------------------------------------------------------------
        # 如果資料夾不存在，就建立資料夾
        # ----------------------------------------------------------------------
        if ( ! file_exists( $aimDir ) )
        {
            $this->createDir( $aimDir );
        }
        # ----------------------------------------------------------------------
        # 開啟目錄
        # ----------------------------------------------------------------------
        $dirHandle = @opendir( $oldDir );
        # ----------------------------------------------------------------------
        # 開始列出檔案中的文件名稱
        # ----------------------------------------------------------------------
        while ( false !== ( $file = readdir( $dirHandle ) ) )
        {
            if ( $file == '.' || $file == '..' )
            {
                continue;
            }
            if ( ! is_dir( $oldDir . $file ) )
            {
                $this->copyFile( $oldDir . $file , $aimDir . $file , $overWrite );
            }
            else
            {
                $this->copyDir( $oldDir . $file , $aimDir . $file , $overWrite );
            }
        }
        # ----------------------------------------------------------------------
        # 關閉讀取目錄
        # ----------------------------------------------------------------------
        return closedir( $dirHandle );
    }

    /**
    @brief      復制文件
    @param      string      $fileUrl
    @param      string      $aimUrl
    @param      boolean     $overWrite 該參數控制是否覆蓋原文件
    @retval     boolean
    @remarks    此範例結果：在 b/1/2/ 資料夾下建立一個 3.exe 檔案。
    @code{.unparsed}
    $this->Core_Files->copyFile( 'b/1/2/3.exe' );
    @endcode
    **/
    public function copyFile( $fileUrl = null , $aimUrl = null , $overWrite = false )
    {
        # ----------------------------------------------------------------------
        # 如果檔案不存在，則不處理
        # ----------------------------------------------------------------------
        if ( ! file_exists( $fileUrl ) )
        {
            return false;
        }
        # ----------------------------------------------------------------------
        # 如果檔案存在，但不覆蓋，則不處理
        # ----------------------------------------------------------------------
        if ( file_exists( $aimUrl ) && $overWrite == false )
        {
            return false;
        }
        # ----------------------------------------------------------------------
        # 如果檔案存在，且為覆蓋模式
        # ----------------------------------------------------------------------
        elseif ( file_exists( $aimUrl ) && $overWrite == true )
        {
            # ------------------------------------------------------------------
            # 刪除檔案
            # ------------------------------------------------------------------
            $this->unlinkFile( $aimUrl );
        }
        # ----------------------------------------------------------------------
        # 取得目錄路徑
        # ----------------------------------------------------------------------
        $aimDir = dirname( $aimUrl );
        # ----------------------------------------------------------------------
        # 建立目錄
        # ----------------------------------------------------------------------
        $this->createDir( $aimDir );
        # ----------------------------------------------------------------------
        # 開始複製檔案
        # ----------------------------------------------------------------------
        copy( $fileUrl , $aimUrl );

        return true;
    }
}